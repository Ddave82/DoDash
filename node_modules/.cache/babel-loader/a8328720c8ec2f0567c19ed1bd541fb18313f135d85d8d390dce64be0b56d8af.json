{"ast":null,"code":"var _jsxFileName = \"/Users/davidgodbehere/Desktop/DoDash_ToDo List/src/components/TaskItem.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskItem = ({\n  task,\n  listColor,\n  onUpdate,\n  onDelete\n}) => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [editText, setEditText] = useState(task.text);\n  const handleSave = () => {\n    if (editText.trim()) {\n      onUpdate(task.id, {\n        text: editText.trim()\n      });\n    }\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `group flex items-center space-x-3 p-3 rounded-lg transition-all duration-200 ${task.completed ? 'bg-white bg-opacity-5' : 'bg-white bg-opacity-10 hover:bg-opacity-15'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onUpdate(task.id, {\n        completed: !task.completed\n      }),\n      className: `w-5 h-5 rounded-full border-2 flex items-center justify-center transition-all duration-200 ${task.completed ? 'bg-opacity-100' : 'bg-opacity-0'}`,\n      style: {\n        borderColor: listColor,\n        backgroundColor: task.completed ? listColor : 'transparent'\n      },\n      children: task.completed && /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"w-3 h-3 text-white\",\n        fill: \"none\",\n        strokeLinecap: \"round\",\n        strokeLinejoin: \"round\",\n        strokeWidth: \"2\",\n        viewBox: \"0 0 24 24\",\n        stroke: \"currentColor\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M5 13l4 4L19 7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1\",\n      children: isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editText,\n        onChange: e => setEditText(e.target.value),\n        onBlur: handleSave,\n        onKeyPress: e => e.key === 'Enter' && handleSave(),\n        className: \"w-full bg-transparent border-none outline-none focus:ring-2 focus:ring-opacity-50 rounded px-2\",\n        style: {\n          '--tw-ring-color': listColor\n        },\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `${task.completed ? 'text-gray-400 line-through' : 'text-white'}`,\n        onClick: () => setIsEditing(true),\n        children: task.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onDelete(task.id),\n      className: \"opacity-0 group-hover:opacity-60 hover:opacity-100 transition-opacity duration-200\",\n      children: \"\\xD7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskItem, \"Fo3PyylolYbC+tkSJDjWI9ebr0c=\");\n_c = TaskItem;\nexport default TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskItem","task","listColor","onUpdate","onDelete","_s","isEditing","setIsEditing","editText","setEditText","text","handleSave","trim","id","className","completed","children","onClick","style","borderColor","backgroundColor","fill","strokeLinecap","strokeLinejoin","strokeWidth","viewBox","stroke","d","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onBlur","onKeyPress","key","autoFocus","_c","$RefreshReg$"],"sources":["/Users/davidgodbehere/Desktop/DoDash_ToDo List/src/components/TaskItem.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Task } from '../types';\n\ninterface TaskItemProps {\n  task: Task;\n  listColor: string;\n  onUpdate: (taskId: string, updates: Partial<Task>) => void;\n  onDelete: (taskId: string) => void;\n}\n\nconst TaskItem: React.FC<TaskItemProps> = ({\n  task,\n  listColor,\n  onUpdate,\n  onDelete,\n}) => {\n  const [isEditing, setIsEditing] = useState(false);\n  const [editText, setEditText] = useState(task.text);\n\n  const handleSave = () => {\n    if (editText.trim()) {\n      onUpdate(task.id, { text: editText.trim() });\n    }\n    setIsEditing(false);\n  };\n\n  return (\n    <div\n      className={`group flex items-center space-x-3 p-3 rounded-lg transition-all duration-200 ${\n        task.completed\n          ? 'bg-white bg-opacity-5'\n          : 'bg-white bg-opacity-10 hover:bg-opacity-15'\n      }`}\n    >\n      <button\n        onClick={() => onUpdate(task.id, { completed: !task.completed })}\n        className={`w-5 h-5 rounded-full border-2 flex items-center justify-center transition-all duration-200 ${\n          task.completed ? 'bg-opacity-100' : 'bg-opacity-0'\n        }`}\n        style={{ borderColor: listColor, backgroundColor: task.completed ? listColor : 'transparent' }}\n      >\n        {task.completed && (\n          <svg\n            className=\"w-3 h-3 text-white\"\n            fill=\"none\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeWidth=\"2\"\n            viewBox=\"0 0 24 24\"\n            stroke=\"currentColor\"\n          >\n            <path d=\"M5 13l4 4L19 7\" />\n          </svg>\n        )}\n      </button>\n\n      <div className=\"flex-1\">\n        {isEditing ? (\n          <input\n            type=\"text\"\n            value={editText}\n            onChange={(e) => setEditText(e.target.value)}\n            onBlur={handleSave}\n            onKeyPress={(e) => e.key === 'Enter' && handleSave()}\n            className=\"w-full bg-transparent border-none outline-none focus:ring-2 focus:ring-opacity-50 rounded px-2\"\n            style={{ '--tw-ring-color': listColor } as any}\n            autoFocus\n          />\n        ) : (\n          <span\n            className={`${\n              task.completed\n                ? 'text-gray-400 line-through'\n                : 'text-white'\n            }`}\n            onClick={() => setIsEditing(true)}\n          >\n            {task.text}\n          </span>\n        )}\n      </div>\n\n      <button\n        onClick={() => onDelete(task.id)}\n        className=\"opacity-0 group-hover:opacity-60 hover:opacity-100 transition-opacity duration-200\"\n      >\n        Ã—\n      </button>\n    </div>\n  );\n};\n\nexport default TaskItem;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}