{"ast":null,"code":"import _objectSpread from\"/Users/davidgodbehere/Desktop/DoDash_ToDo List/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import{Droppable,Draggable}from'react-beautiful-dnd';import TaskItem from'./TaskItem';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const TaskList=_ref=>{let{list,onUpdateList}=_ref;const[newTaskText,setNewTaskText]=useState('');const addTask=text=>{if(text.trim()){const newTask={id:\"task-\".concat(Date.now()),text:text.trim(),completed:false,order:list.tasks.length};onUpdateList(_objectSpread(_objectSpread({},list),{},{tasks:[...list.tasks,newTask]}));setNewTaskText('');}};const updateTask=(taskId,updates)=>{onUpdateList(_objectSpread(_objectSpread({},list),{},{tasks:list.tasks.map(task=>task.id===taskId?_objectSpread(_objectSpread({},task),updates):task)}));};const deleteTask=taskId=>{onUpdateList(_objectSpread(_objectSpread({},list),{},{tasks:list.tasks.filter(task=>task.id!==taskId)}));};const clearCompleted=()=>{onUpdateList(_objectSpread(_objectSpread({},list),{},{tasks:list.tasks.filter(task=>!task.completed)}));};const activeTasks=list.tasks.filter(task=>!task.completed);const completedTasks=list.tasks.filter(task=>task.completed);return/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-2xl mx-auto\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"mb-6\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newTaskText,onChange:e=>setNewTaskText(e.target.value),onKeyPress:e=>e.key==='Enter'&&addTask(newTaskText),placeholder:\"Add a new task...\",className:\"flex-1 bg-white bg-opacity-5 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-opacity-50\",style:{'--tw-ring-color':list.color}}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>addTask(newTaskText),className:\"px-4 py-2 rounded-lg transition-all duration-200\",style:{backgroundColor:list.color},children:\"Add\"})]})}),/*#__PURE__*/_jsx(Droppable,{droppableId:\"tasks\",children:provided=>/*#__PURE__*/_jsxs(\"div\",_objectSpread(_objectSpread({},provided.droppableProps),{},{ref:provided.innerRef,className:\"space-y-2\",children:[activeTasks.map((task,index)=>/*#__PURE__*/_jsx(Draggable,{draggableId:task.id,index:index,children:provided=>/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread(_objectSpread({ref:provided.innerRef},provided.draggableProps),provided.dragHandleProps),{},{children:/*#__PURE__*/_jsx(TaskItem,{task:task,listColor:list.color,onUpdate:updateTask,onDelete:deleteTask})}))},task.id)),provided.placeholder]}))}),completedTasks.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between mb-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-400\",children:\"Completed\"}),/*#__PURE__*/_jsx(\"button\",{onClick:clearCompleted,className:\"text-sm text-gray-400 hover:text-white transition-colors\",children:\"Clear All\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-2\",children:completedTasks.map(task=>/*#__PURE__*/_jsx(TaskItem,{task:task,listColor:list.color,onUpdate:updateTask,onDelete:deleteTask},task.id))})]})]});};export default TaskList;","map":{"version":3,"names":["React","useState","Droppable","Draggable","TaskItem","jsx","_jsx","jsxs","_jsxs","TaskList","_ref","list","onUpdateList","newTaskText","setNewTaskText","addTask","text","trim","newTask","id","concat","Date","now","completed","order","tasks","length","_objectSpread","updateTask","taskId","updates","map","task","deleteTask","filter","clearCompleted","activeTasks","completedTasks","className","children","type","value","onChange","e","target","onKeyPress","key","placeholder","style","color","onClick","backgroundColor","droppableId","provided","droppableProps","ref","innerRef","index","draggableId","draggableProps","dragHandleProps","listColor","onUpdate","onDelete"],"sources":["/Users/davidgodbehere/Desktop/DoDash_ToDo List/src/components/TaskList.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport { TodoList, Task } from '../types';\nimport TaskItem from './TaskItem';\n\ninterface TaskListProps {\n  list: TodoList;\n  onUpdateList: (list: TodoList) => void;\n}\n\nconst TaskList: React.FC<TaskListProps> = ({ list, onUpdateList }) => {\n  const [newTaskText, setNewTaskText] = useState('');\n\n  const addTask = (text: string) => {\n    if (text.trim()) {\n      const newTask: Task = {\n        id: `task-${Date.now()}`,\n        text: text.trim(),\n        completed: false,\n        order: list.tasks.length,\n      };\n      onUpdateList({\n        ...list,\n        tasks: [...list.tasks, newTask],\n      });\n      setNewTaskText('');\n    }\n  };\n\n  const updateTask = (taskId: string, updates: Partial<Task>) => {\n    onUpdateList({\n      ...list,\n      tasks: list.tasks.map(task =>\n        task.id === taskId ? { ...task, ...updates } : task\n      ),\n    });\n  };\n\n  const deleteTask = (taskId: string) => {\n    onUpdateList({\n      ...list,\n      tasks: list.tasks.filter(task => task.id !== taskId),\n    });\n  };\n\n  const clearCompleted = () => {\n    onUpdateList({\n      ...list,\n      tasks: list.tasks.filter(task => !task.completed),\n    });\n  };\n\n  const activeTasks = list.tasks.filter(task => !task.completed);\n  const completedTasks = list.tasks.filter(task => task.completed);\n\n  return (\n    <div className=\"max-w-2xl mx-auto\">\n      <div className=\"mb-6\">\n        <div className=\"flex items-center space-x-2\">\n          <input\n            type=\"text\"\n            value={newTaskText}\n            onChange={(e) => setNewTaskText(e.target.value)}\n            onKeyPress={(e) => e.key === 'Enter' && addTask(newTaskText)}\n            placeholder=\"Add a new task...\"\n            className=\"flex-1 bg-white bg-opacity-5 rounded-lg px-4 py-2 focus:outline-none focus:ring-2 focus:ring-opacity-50\"\n            style={{ '--tw-ring-color': list.color } as any}\n          />\n          <button\n            onClick={() => addTask(newTaskText)}\n            className=\"px-4 py-2 rounded-lg transition-all duration-200\"\n            style={{ backgroundColor: list.color }}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n\n      <Droppable droppableId=\"tasks\">\n        {(provided) => (\n          <div\n            {...provided.droppableProps}\n            ref={provided.innerRef}\n            className=\"space-y-2\"\n          >\n            {activeTasks.map((task, index) => (\n              <Draggable key={task.id} draggableId={task.id} index={index}>\n                {(provided) => (\n                  <div\n                    ref={provided.innerRef}\n                    {...provided.draggableProps}\n                    {...provided.dragHandleProps}\n                  >\n                    <TaskItem\n                      task={task}\n                      listColor={list.color}\n                      onUpdate={updateTask}\n                      onDelete={deleteTask}\n                    />\n                  </div>\n                )}\n              </Draggable>\n            ))}\n            {provided.placeholder}\n          </div>\n        )}\n      </Droppable>\n\n      {completedTasks.length > 0 && (\n        <div className=\"mt-8\">\n          <div className=\"flex items-center justify-between mb-4\">\n            <h3 className=\"text-lg font-semibold text-gray-400\">Completed</h3>\n            <button\n              onClick={clearCompleted}\n              className=\"text-sm text-gray-400 hover:text-white transition-colors\"\n            >\n              Clear All\n            </button>\n          </div>\n          <div className=\"space-y-2\">\n            {completedTasks.map((task) => (\n              <TaskItem\n                key={task.id}\n                task={task}\n                listColor={list.color}\n                onUpdate={updateTask}\n                onDelete={deleteTask}\n              />\n            ))}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TaskList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}